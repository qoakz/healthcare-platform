version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: healthcare_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/healthcare_platform
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # Celery Worker
  celery:
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/app
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/healthcare_platform
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A healthcare_platform worker --loglevel=info

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/app
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/healthcare_platform
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A healthcare_platform beat --loglevel=info

  # Next.js Frontend
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./app:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXTAUTH_URL=http://localhost:3000
    depends_on:
      - api
    command: npm run dev

  # TURN Server for WebRTC
  coturn:
    image: coturn/coturn:latest
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "49152-65535:49152-65535/udp"
    environment:
      - TURN_USERNAME=healthcare
      - TURN_PASSWORD=healthcare123
    command: >
      --listening-port=3478
      --tls-listening-port=5349
      --listening-ip=0.0.0.0
      --external-ip=0.0.0.0
      --realm=healthcare.local
      --server-name=healthcare.local
      --user=healthcare:healthcare123
      --no-multicast-peers
      --no-cli
      --no-tlsv1
      --no-tlsv1_1
      --no-dtls
      --no-tls
      --log-file=stdout
      --verbose
      --fingerprint
      --lt-cred-mech
      --no-multicast-peers
      --no-cli
      --no-tlsv1
      --no-tlsv1_1
      --no-dtls
      --no-tls
      --log-file=stdout
      --verbose
      --fingerprint
      --lt-cred-mech

volumes:
  postgres_data:
  redis_data:
